-- Complete database schema for Athlete Performance Tracker
-- Optimized for H2 database with all entity fields and test data

-- Users table (for authentication and basic user info)
CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    role VARCHAR(50) NOT NULL CHECK (role IN ('ADMIN', 'COACH', 'ATHLETE')),
    is_active BOOLEAN NOT NULL DEFAULT true,
    default_route VARCHAR(255),
    last_login_at TIMESTAMP,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Athletes table (detailed athlete information)
CREATE TABLE athletes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    date_of_birth DATE,
    sport VARCHAR(50) NOT NULL CHECK (sport IN ('BASEBALL', 'FOOTBALL', 'BASKETBALL', 'SOFTBALL', 'SOCCER')),
    position VARCHAR(100),
    height DOUBLE PRECISION,
    weight DOUBLE PRECISION,
    email VARCHAR(255),
    phone VARCHAR(20),
    emergency_contact_name VARCHAR(255),
    emergency_contact_phone VARCHAR(20),
    medical_notes TEXT,
    profile_photo_url VARCHAR(500),
    is_active BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Exercises table (exercise library)
CREATE TABLE exercises (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    description TEXT,
    category VARCHAR(50) NOT NULL CHECK (category IN ('STRENGTH', 'CARDIO', 'PLYOMETRIC', 'FLEXIBILITY', 'CORE', 'REHABILITATION', 'SPORT_SPECIFIC')),
    muscle_group VARCHAR(50) NOT NULL CHECK (muscle_group IN ('CHEST', 'BACK', 'SHOULDERS', 'ARMS', 'LEGS', 'CORE', 'FULL_BODY', 'CARDIO')),
    instructions TEXT,
    video_url VARCHAR(500),
    image_url VARCHAR(500),
    is_active BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Programs table (training program templates)
CREATE TABLE programs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    sport VARCHAR(50) NOT NULL CHECK (sport IN ('BASEBALL', 'FOOTBALL', 'BASKETBALL', 'SOFTBALL', 'SOCCER')),
    duration_weeks INTEGER,
    difficulty_level VARCHAR(50),
    goals TEXT,
    created_by_id BIGINT NOT NULL,
    is_active BOOLEAN NOT NULL DEFAULT true,
    is_template BOOLEAN NOT NULL DEFAULT false,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by_id) REFERENCES users(id)
);

-- Program Workouts table (workouts within a program)
CREATE TABLE program_workouts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    program_id BIGINT NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    order_in_program INTEGER NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (program_id) REFERENCES programs(id) ON DELETE CASCADE
);

-- Program Workout Exercises table (exercises within a workout)
CREATE TABLE program_workout_exercises (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    program_workout_id BIGINT NOT NULL,
    exercise_id BIGINT NOT NULL,
    sets INTEGER,
    reps INTEGER,
    intensity_percentage DOUBLE PRECISION,
    rest_time INTEGER,
    notes TEXT,
    order_in_workout INTEGER NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (program_workout_id) REFERENCES program_workouts(id) ON DELETE CASCADE,
    FOREIGN KEY (exercise_id) REFERENCES exercises(id)
);

-- Athlete Programs table (program assignments to athletes)
CREATE TABLE athlete_programs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    athlete_id BIGINT NOT NULL,
    program_id BIGINT NOT NULL,
    assigned_by_id BIGINT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE,
    status VARCHAR(50) NOT NULL DEFAULT 'ACTIVE' CHECK (status IN ('ACTIVE', 'COMPLETED', 'PAUSED', 'CANCELLED')),
    notes TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (athlete_id) REFERENCES athletes(id),
    FOREIGN KEY (program_id) REFERENCES programs(id),
    FOREIGN KEY (assigned_by_id) REFERENCES users(id)
);

-- Workouts table (actual workout sessions)
CREATE TABLE workouts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    athlete_id BIGINT NOT NULL,
    name VARCHAR(255) NOT NULL,
    workout_date DATE NOT NULL,
    completed_date DATE,
    duration INTEGER,
    notes TEXT,
    rpe INTEGER CHECK (rpe >= 1 AND rpe <= 10),
    coach_id BIGINT,
    coach_instructions TEXT,
    program_workout_exercise_id BIGINT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (athlete_id) REFERENCES athletes(id),
    FOREIGN KEY (coach_id) REFERENCES users(id),
    FOREIGN KEY (program_workout_exercise_id) REFERENCES program_workout_exercises(id)
);

-- Workout Exercises table (exercises performed in a workout)
CREATE TABLE workout_exercises (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    workout_id BIGINT NOT NULL,
    exercise_id BIGINT NOT NULL,
    sets INTEGER,
    reps INTEGER,
    weight DOUBLE PRECISION,
    distance DOUBLE PRECISION,
    time INTEGER,
    rest_time INTEGER,
    notes TEXT,
    order_in_workout INTEGER NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (workout_id) REFERENCES workouts(id) ON DELETE CASCADE,
    FOREIGN KEY (exercise_id) REFERENCES exercises(id)
);

-- Performance Metrics table (performance tracking)
CREATE TABLE performance_metrics (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    athlete_id BIGINT NOT NULL,
    metric_type VARCHAR(100) NOT NULL CHECK (metric_type IN (
        'BENCH_PRESS_MAX', 'SQUAT_MAX', 'DEADLIFT_MAX', 'OVERHEAD_PRESS_MAX',
        'VERTICAL_JUMP', 'BROAD_JUMP', 'MEDICINE_BALL_THROW',
        'FORTY_YARD_DASH', 'TWENTY_YARD_DASH', 'TEN_YARD_DASH', 'SHUTTLE_RUN', 'THREE_CONE_DRILL',
        'MILE_TIME', 'HALF_MILE_TIME', 'VO2_MAX', 'RESTING_HEART_RATE',
        'BODY_WEIGHT', 'BODY_FAT_PERCENTAGE', 'MUSCLE_MASS',
        'BATTING_VELOCITY', 'PITCH_VELOCITY', 'SERVE_VELOCITY', 'SHOT_VELOCITY',
        'SIT_AND_REACH', 'SHOULDER_FLEXIBILITY', 'HIP_FLEXIBILITY',
        'CUSTOM'
    )),
    metric_value DOUBLE PRECISION NOT NULL,
    unit VARCHAR(20),
    test_date TIMESTAMP NOT NULL,
    notes TEXT,
    recorded_by_id BIGINT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (athlete_id) REFERENCES athletes(id),
    FOREIGN KEY (recorded_by_id) REFERENCES users(id)
);

-- Program Progress table (tracking exercise completion)
CREATE TABLE program_progress (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    athlete_program_id BIGINT NOT NULL,
    program_workout_exercise_id BIGINT NOT NULL,
    completed_date DATE NOT NULL,
    actual_sets INTEGER,
    actual_reps INTEGER,
    actual_weight DOUBLE PRECISION,
    actual_intensity DOUBLE PRECISION,
    rest_time INTEGER,
    completion_status VARCHAR(50) NOT NULL DEFAULT 'COMPLETED' CHECK (completion_status IN ('COMPLETED', 'PARTIAL', 'SKIPPED')),
    athlete_notes TEXT,
    coach_notes TEXT,
    logged_by_id BIGINT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (athlete_program_id) REFERENCES athlete_programs(id),
    FOREIGN KEY (program_workout_exercise_id) REFERENCES program_workout_exercises(id),
    FOREIGN KEY (logged_by_id) REFERENCES users(id)
);

-- Assessments table (enhanced assessment templates)
CREATE TABLE assessments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    description TEXT,
    category VARCHAR(100) NOT NULL CHECK (category IN (
        'FITNESS_TEST', 'STRENGTH_TEST', 'SPEED_AGILITY', 'ENDURANCE', 
        'FLEXIBILITY_MOBILITY', 'BALANCE_COORDINATION', 'BODY_COMPOSITION', 
        'SPORT_SPECIFIC', 'FUNCTIONAL_MOVEMENT', 'INJURY_PREVENTION', 'CUSTOM'
    )),
    type VARCHAR(50) NOT NULL CHECK (type IN (
        'TIMED', 'DISTANCE', 'REPETITION', 'WEIGHT', 'SCORE', 
        'MEASUREMENT', 'PERCENTAGE', 'QUALITATIVE'
    )),
    instructions TEXT,
    unit VARCHAR(20),
    scoring_type VARCHAR(50),
    target_value DOUBLE PRECISION,
    min_value DOUBLE PRECISION,
    max_value DOUBLE PRECISION,
    equipment_required VARCHAR(255),
    estimated_duration INTEGER,
    sport VARCHAR(50) CHECK (sport IN ('BASEBALL', 'FOOTBALL', 'BASKETBALL', 'SOFTBALL', 'SOCCER')),
    is_active BOOLEAN NOT NULL DEFAULT true,
    is_template BOOLEAN NOT NULL DEFAULT true,
    created_by_id BIGINT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by_id) REFERENCES users(id)
);

-- Assessment Schedules table (scheduled assessments)
CREATE TABLE assessment_schedules (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    assessment_id BIGINT NOT NULL,
    athlete_id BIGINT NOT NULL,
    scheduled_by_id BIGINT NOT NULL,
    scheduled_date DATE NOT NULL,
    scheduled_time TIME,
    status VARCHAR(50) NOT NULL DEFAULT 'SCHEDULED' CHECK (status IN ('SCHEDULED', 'CONFIRMED', 'COMPLETED', 'CANCELLED', 'RESCHEDULED', 'NO_SHOW', 'IN_PROGRESS')),
    location VARCHAR(255),
    notes TEXT,
    special_instructions TEXT,
    reminder_date TIMESTAMP,
    reminder_sent BOOLEAN NOT NULL DEFAULT false,
    recurrence_type VARCHAR(50) CHECK (recurrence_type IN ('DAILY', 'WEEKLY', 'BIWEEKLY', 'MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'CUSTOM')),
    recurrence_interval INTEGER,
    recurrence_end_date DATE,
    max_recurrences INTEGER,
    is_active BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (assessment_id) REFERENCES assessments(id),
    FOREIGN KEY (athlete_id) REFERENCES athletes(id),
    FOREIGN KEY (scheduled_by_id) REFERENCES users(id)
);

-- Assessment Results table (completed assessments)
CREATE TABLE assessment_results (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    assessment_id BIGINT NOT NULL,
    athlete_id BIGINT NOT NULL,
    assessment_schedule_id BIGINT,
    conducted_by_id BIGINT,
    test_date DATE NOT NULL,
    result_value DOUBLE PRECISION NOT NULL,
    raw_value VARCHAR(255),
    status VARCHAR(50) NOT NULL CHECK (status IN ('SCHEDULED', 'IN_PROGRESS', 'COMPLETED', 'INCOMPLETE', 'CANCELLED', 'NO_SHOW', 'RESCHEDULED')),
    notes TEXT,
    conditions TEXT,
    video_url VARCHAR(500),
    is_baseline BOOLEAN NOT NULL DEFAULT false,
    percentile_rank DOUBLE PRECISION,
    improvement_from_baseline DOUBLE PRECISION,
    improvement_percentage DOUBLE PRECISION,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (assessment_id) REFERENCES assessments(id),
    FOREIGN KEY (athlete_id) REFERENCES athletes(id),
    FOREIGN KEY (assessment_schedule_id) REFERENCES assessment_schedules(id),
    FOREIGN KEY (conducted_by_id) REFERENCES users(id)
);

-- Create indexes for better performance
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_role ON users(role);
CREATE INDEX idx_athletes_sport ON athletes(sport);
CREATE INDEX idx_athletes_is_active ON athletes(is_active);
CREATE INDEX idx_exercises_category ON exercises(category);
CREATE INDEX idx_exercises_muscle_group ON exercises(muscle_group);
CREATE INDEX idx_programs_sport ON programs(sport);
CREATE INDEX idx_programs_created_by ON programs(created_by_id);
CREATE INDEX idx_athlete_programs_athlete_id ON athlete_programs(athlete_id);
CREATE INDEX idx_athlete_programs_status ON athlete_programs(status);
CREATE INDEX idx_workouts_athlete_id ON workouts(athlete_id);
CREATE INDEX idx_workouts_workout_date ON workouts(workout_date);
CREATE INDEX idx_performance_metrics_athlete_id ON performance_metrics(athlete_id);
CREATE INDEX idx_performance_metrics_type ON performance_metrics(metric_type);
CREATE INDEX idx_performance_metrics_date ON performance_metrics(test_date);
CREATE INDEX idx_program_progress_athlete_program_id ON program_progress(athlete_program_id);
CREATE INDEX idx_assessment_schedules_athlete_id ON assessment_schedules(athlete_id);
CREATE INDEX idx_assessment_schedules_date ON assessment_schedules(scheduled_date);
CREATE INDEX idx_assessment_results_athlete_id ON assessment_results(athlete_id);
CREATE INDEX idx_assessment_results_assessment_id ON assessment_results(assessment_id);

-- Insert test data
-- Test Users (password for all accounts is 'password123')
INSERT INTO users (email, password, first_name, last_name, role, is_active, created_at, updated_at) VALUES
('admin@athletetracker.com', '$2a$12$xDocdhD3pgcMWgnhgK7hYOpa04yoW7NeXNYyaEqNBDCpVbtyHEZ1a', 'Admin', 'User', 'ADMIN', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('coach.smith@athletetracker.com', '$2a$12$xDocdhD3pgcMWgnhgK7hYOpa04yoW7NeXNYyaEqNBDCpVbtyHEZ1a', 'John', 'Smith', 'COACH', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('coach.johnson@athletetracker.com', '$2a$12$xDocdhD3pgcMWgnhgK7hYOpa04yoW7NeXNYyaEqNBDCpVbtyHEZ1a', 'Sarah', 'Johnson', 'COACH', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('coach.williams@athletetracker.com', '$2a$12$xDocdhD3pgcMWgnhgK7hYOpa04yoW7NeXNYyaEqNBDCpVbtyHEZ1a', 'Mike', 'Williams', 'COACH', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('athlete.jones@athletetracker.com', '$2a$12$xDocdhD3pgcMWgnhgK7hYOpa04yoW7NeXNYyaEqNBDCpVbtyHEZ1a', 'Alex', 'Jones', 'ATHLETE', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('athlete.brown@athletetracker.com', '$2a$12$xDocdhD3pgcMWgnhgK7hYOpa04yoW7NeXNYyaEqNBDCpVbtyHEZ1a', 'Jordan', 'Brown', 'ATHLETE', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('athlete.davis@athletetracker.com', '$2a$12$xDocdhD3pgcMWgnhgK7hYOpa04yoW7NeXNYyaEqNBDCpVbtyHEZ1a', 'Taylor', 'Davis', 'ATHLETE', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('athlete.wilson@athletetracker.com', '$2a$12$xDocdhD3pgcMWgnhgK7hYOpa04yoW7NeXNYyaEqNBDCpVbtyHEZ1a', 'Casey', 'Wilson', 'ATHLETE', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

-- Test Athletes
INSERT INTO athletes (first_name, last_name, date_of_birth, sport, position, height, weight, email, phone, is_active, created_at, updated_at) VALUES
('Alex', 'Jones', '2000-03-15', 'BASEBALL', 'Shortstop', 70.0, 180.0, 'alex.jones@email.com', '555-0101', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Jordan', 'Brown', '1999-07-22', 'FOOTBALL', 'Quarterback', 73.0, 195.0, 'jordan.brown@email.com', '555-0102', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Taylor', 'Davis', '2001-01-10', 'BASKETBALL', 'Point Guard', 68.0, 165.0, 'taylor.davis@email.com', '555-0103', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Casey', 'Wilson', '2000-09-05', 'SOCCER', 'Midfielder', 69.0, 155.0, 'casey.wilson@email.com', '555-0104', true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

-- Sample Exercises
INSERT INTO exercises (name, description, category, muscle_group, instructions, is_active, created_at) VALUES
('Bench Press', 'Barbell bench press for chest strength', 'STRENGTH', 'CHEST', '1. Lie on bench with feet flat on floor\n2. Grip bar with hands slightly wider than shoulders\n3. Lower bar to chest with control\n4. Press bar up explosively\n5. Keep core tight throughout movement', true, CURRENT_TIMESTAMP),
('Back Squat', 'Barbell back squat for lower body strength', 'STRENGTH', 'LEGS', '1. Position bar on upper traps\n2. Stand with feet shoulder-width apart\n3. Descend by pushing hips back and bending knees\n4. Lower until thighs are parallel to floor\n5. Drive through heels to return to standing', true, CURRENT_TIMESTAMP),
('Deadlift', 'Conventional deadlift for total body strength', 'STRENGTH', 'FULL_BODY', '1. Stand with feet hip-width apart, bar over mid-foot\n2. Bend at hips and knees to grip bar\n3. Keep chest up and back straight\n4. Drive through heels and extend hips\n5. Stand tall with shoulders back', true, CURRENT_TIMESTAMP),
('Pull-ups', 'Bodyweight pull-ups for back and arm strength', 'STRENGTH', 'BACK', '1. Hang from pull-up bar with arms fully extended\n2. Pull body up until chin clears bar\n3. Lower with control to full hang\n4. Keep core engaged throughout', true, CURRENT_TIMESTAMP),
('Box Jump', 'Plyometric box jumps for power development', 'PLYOMETRIC', 'LEGS', '1. Stand in front of box with feet shoulder-width apart\n2. Bend knees and swing arms back\n3. Jump explosively onto box\n4. Land softly with bent knees\n5. Step down carefully', true, CURRENT_TIMESTAMP);

-- Sample Programs
INSERT INTO programs (name, description, sport, duration_weeks, difficulty_level, goals, created_by_id, is_active, is_template, created_at, updated_at) VALUES
('Baseball Strength Foundation', 'Foundational strength program for baseball players focusing on functional movement patterns', 'BASEBALL', 8, 'Beginner', 'Build foundational strength, improve mobility, develop proper movement patterns', 2, true, true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Football Power Development', 'Power and explosion program designed for football players', 'FOOTBALL', 12, 'Intermediate', 'Increase power output, improve sprint speed, build game-specific strength', 2, true, true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Basketball Agility Program', 'Court-specific agility and conditioning program for basketball players', 'BASKETBALL', 6, 'Intermediate', 'Improve court speed, enhance agility, develop basketball-specific conditioning', 3, true, true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

-- Sample Performance Metrics
INSERT INTO performance_metrics (athlete_id, metric_type, metric_value, unit, test_date, notes, recorded_by_id, created_at) VALUES
(1, 'BENCH_PRESS_MAX', 185.0, 'lbs', CURRENT_TIMESTAMP, 'Baseline measurement', 2, CURRENT_TIMESTAMP),
(1, 'SQUAT_MAX', 225.0, 'lbs', CURRENT_TIMESTAMP, 'Baseline measurement', 2, CURRENT_TIMESTAMP),
(1, 'FORTY_YARD_DASH', 4.8, 'seconds', CURRENT_TIMESTAMP, 'Electronic timing', 2, CURRENT_TIMESTAMP),
(2, 'BENCH_PRESS_MAX', 205.0, 'lbs', CURRENT_TIMESTAMP, 'Baseline measurement', 2, CURRENT_TIMESTAMP),
(2, 'SQUAT_MAX', 275.0, 'lbs', CURRENT_TIMESTAMP, 'Baseline measurement', 2, CURRENT_TIMESTAMP),
(2, 'FORTY_YARD_DASH', 4.6, 'seconds', CURRENT_TIMESTAMP, 'Electronic timing', 2, CURRENT_TIMESTAMP);

-- Sample Assessments
INSERT INTO assessments (name, description, category, type, instructions, unit, sport, equipment_required, estimated_duration, is_active, is_template, created_by_id, created_at, updated_at) VALUES
('40-Yard Dash', 'Sprint test measuring straight-line speed over 40 yards', 'SPEED_AGILITY', 'TIMED', 'Sprint as fast as possible from start line to finish line over 40-yard distance', 'seconds', 'FOOTBALL', 'Timing gates or stopwatch, 40-yard marked course', 5, true, true, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Vertical Jump', 'Test measuring maximum vertical jump height', 'FITNESS_TEST', 'DISTANCE', 'Jump as high as possible from standing position', 'inches', null, 'Vertec or wall marking system', 3, true, true, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('1-Rep Max Bench Press', 'Strength test determining maximum weight for single bench press repetition', 'STRENGTH_TEST', 'WEIGHT', 'Perform single repetition with maximum possible weight', 'lbs', null, 'Barbell, bench, weight plates, spotter', 15, true, true, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);